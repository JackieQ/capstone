// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "packet_filtering.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic packet_filtering::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic packet_filtering::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> packet_filtering::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> packet_filtering::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool packet_filtering::ap_const_boolean_1 = true;
const sc_lv<4> packet_filtering::ap_const_lv4_7 = "111";
const sc_lv<1> packet_filtering::ap_const_lv1_1 = "1";
const sc_lv<4> packet_filtering::ap_const_lv4_4 = "100";
const sc_lv<4> packet_filtering::ap_const_lv4_1 = "1";
const sc_lv<4> packet_filtering::ap_const_lv4_0 = "0000";
const sc_lv<4> packet_filtering::ap_const_lv4_6 = "110";
const sc_lv<4> packet_filtering::ap_const_lv4_5 = "101";
const sc_lv<4> packet_filtering::ap_const_lv4_3 = "11";
const sc_lv<4> packet_filtering::ap_const_lv4_2 = "10";
const bool packet_filtering::ap_const_boolean_0 = false;
const sc_lv<1> packet_filtering::ap_const_lv1_0 = "0";
const sc_lv<32> packet_filtering::ap_const_lv32_40 = "1000000";
const sc_lv<32> packet_filtering::ap_const_lv32_41 = "1000001";
const sc_lv<32> packet_filtering::ap_const_lv32_48 = "1001000";
const sc_lv<32> packet_filtering::ap_const_lv32_8 = "1000";
const sc_lv<32> packet_filtering::ap_const_lv32_F = "1111";
const sc_lv<32> packet_filtering::ap_const_lv32_10 = "10000";
const sc_lv<32> packet_filtering::ap_const_lv32_17 = "10111";
const sc_lv<32> packet_filtering::ap_const_lv32_18 = "11000";
const sc_lv<32> packet_filtering::ap_const_lv32_1F = "11111";
const sc_lv<32> packet_filtering::ap_const_lv32_38 = "111000";
const sc_lv<32> packet_filtering::ap_const_lv32_3F = "111111";
const sc_lv<32> packet_filtering::ap_const_lv32_20 = "100000";
const sc_lv<32> packet_filtering::ap_const_lv32_27 = "100111";
const sc_lv<32> packet_filtering::ap_const_lv32_30 = "110000";
const sc_lv<32> packet_filtering::ap_const_lv32_37 = "110111";
const sc_lv<32> packet_filtering::ap_const_lv32_28 = "101000";
const sc_lv<32> packet_filtering::ap_const_lv32_2F = "101111";

packet_filtering::packet_filtering(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_eth_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op44_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( to_shell_V_full_n );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op89_write_state2 );
    sensitive << ( to_pr_V_full_n );
    sensitive << ( ap_predicate_op94_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_eth_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op44_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( to_shell_V_full_n );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op89_write_state2 );
    sensitive << ( to_pr_V_full_n );
    sensitive << ( ap_predicate_op94_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_eth_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op44_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( to_shell_V_full_n );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op89_write_state2 );
    sensitive << ( to_pr_V_full_n );
    sensitive << ( ap_predicate_op94_write_state2 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( from_eth_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op44_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( to_shell_V_full_n );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op89_write_state2 );
    sensitive << ( to_pr_V_full_n );
    sensitive << ( ap_predicate_op94_write_state2 );

    SC_METHOD(thread_ap_condition_125);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_234);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_451);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_455);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4);
    sensitive << ( from_eth_V_dout );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( app_packet_out_last_s );
    sensitive << ( ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167 );
    sensitive << ( ap_condition_451 );

    SC_METHOD(thread_ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4);
    sensitive << ( from_eth_V_dout );
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( app_packet_out_last_s );
    sensitive << ( ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158 );
    sensitive << ( ap_condition_455 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158);

    SC_METHOD(thread_ap_predicate_op13_read_state1);
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( state_V );

    SC_METHOD(thread_ap_predicate_op29_read_state1);
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( state_V );

    SC_METHOD(thread_ap_predicate_op44_read_state1);
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( state_V );

    SC_METHOD(thread_ap_predicate_op61_read_state1);
    sensitive << ( grp_nbreadreq_fu_130_p3 );
    sensitive << ( state_V );

    SC_METHOD(thread_ap_predicate_op89_write_state2);
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( tmp_3_reg_566 );

    SC_METHOD(thread_ap_predicate_op94_write_state2);
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( tmp_2_reg_570 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_from_eth_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( from_eth_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op44_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_from_eth_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op44_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_212_p4);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_grp_fu_222_p4);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_grp_fu_232_p4);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_grp_nbreadreq_fu_130_p3);
    sensitive << ( from_eth_V_empty_n );

    SC_METHOD(thread_lhs_V_1_fu_328_p1);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_lhs_V_fu_386_p1);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_observedAddress_V_fu_346_p6);
    sensitive << ( tmp_20_fu_342_p1 );
    sensitive << ( tmp_17_fu_338_p1 );
    sensitive << ( grp_fu_212_p4 );
    sensitive << ( grp_fu_222_p4 );
    sensitive << ( grp_fu_232_p4 );

    SC_METHOD(thread_state_V_load_load_fu_252_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_storemerge1_cast_cas_fu_302_p3);
    sensitive << ( ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4 );

    SC_METHOD(thread_storemerge3_cast_cas_fu_372_p3);
    sensitive << ( tmp_22_fu_366_p2 );

    SC_METHOD(thread_storemerge_cast_cast_fu_276_p3);
    sensitive << ( ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4 );

    SC_METHOD(thread_tmp_11_fu_410_p4);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_tmp_12_fu_420_p4);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_tmp_14_fu_430_p4);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_tmp_17_fu_338_p1);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_tmp_20_fu_342_p1);
    sensitive << ( first_packet_in_data );

    SC_METHOD(thread_tmp_21_fu_518_p4);
    sensitive << ( first_packet_org_dat );
    sensitive << ( first_packet_org_tke );
    sensitive << ( tmp_last_V_reg_554 );

    SC_METHOD(thread_tmp_22_fu_366_p2);
    sensitive << ( debug_bit_V );
    sensitive << ( tmp_s_fu_360_p2 );

    SC_METHOD(thread_tmp_37_fu_508_p4);
    sensitive << ( second_packet_org_da );
    sensitive << ( second_packet_org_tk );
    sensitive << ( tmp_last_V_1_reg_560 );

    SC_METHOD(thread_tmp_4_fu_400_p4);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_tmp_6_fu_498_p4);
    sensitive << ( first_packet_org_dat );
    sensitive << ( first_packet_org_tke );
    sensitive << ( tmp_last_V_reg_554 );

    SC_METHOD(thread_tmp_7_fu_488_p4);
    sensitive << ( second_packet_org_da );
    sensitive << ( second_packet_org_tk );
    sensitive << ( tmp_last_V_1_reg_560 );

    SC_METHOD(thread_tmp_8_fu_396_p1);
    sensitive << ( from_eth_V_dout );

    SC_METHOD(thread_tmp_s_fu_360_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op44_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( src_mac_addr_V );
    sensitive << ( observedAddress_V_fu_346_p6 );

    SC_METHOD(thread_to_pr_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( to_pr_V_full_n );
    sensitive << ( ap_predicate_op94_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_to_pr_V_din);
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op94_write_state2 );
    sensitive << ( reg_242 );
    sensitive << ( tmp_37_fu_508_p4 );
    sensitive << ( tmp_21_fu_518_p4 );
    sensitive << ( ap_condition_234 );

    SC_METHOD(thread_to_pr_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op94_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_to_shell_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( to_shell_V_full_n );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op89_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_to_shell_V_din);
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op89_write_state2 );
    sensitive << ( reg_242 );
    sensitive << ( tmp_7_fu_488_p4 );
    sensitive << ( tmp_6_fu_498_p4 );
    sensitive << ( ap_condition_234 );

    SC_METHOD(thread_to_shell_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( state_V_load_reg_550 );
    sensitive << ( ap_predicate_op89_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_x_V_fu_440_p9);
    sensitive << ( grp_fu_212_p4 );
    sensitive << ( grp_fu_222_p4 );
    sensitive << ( grp_fu_232_p4 );
    sensitive << ( tmp_8_fu_396_p1 );
    sensitive << ( tmp_11_fu_410_p4 );
    sensitive << ( tmp_14_fu_430_p4 );
    sensitive << ( tmp_12_fu_420_p4 );
    sensitive << ( tmp_4_fu_400_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    state_V = "0000";
    first_packet_org_dat = "0000000000000000000000000000000000000000000000000000000000000000";
    first_packet_org_las = "0";
    first_packet_org_tke = "00000000";
    first_packet_in_data = "0000000000000000000000000000000000000000000000000000000000000000";
    second_packet_org_da = "0000000000000000000000000000000000000000000000000000000000000000";
    second_packet_org_la = "0";
    second_packet_org_tk = "00000000";
    app_packet_out_last_s = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "packet_filtering_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, from_eth_V_dout, "(port)from_eth_V_dout");
    sc_trace(mVcdFile, from_eth_V_empty_n, "(port)from_eth_V_empty_n");
    sc_trace(mVcdFile, from_eth_V_read, "(port)from_eth_V_read");
    sc_trace(mVcdFile, to_shell_V_din, "(port)to_shell_V_din");
    sc_trace(mVcdFile, to_shell_V_full_n, "(port)to_shell_V_full_n");
    sc_trace(mVcdFile, to_shell_V_write, "(port)to_shell_V_write");
    sc_trace(mVcdFile, to_pr_V_din, "(port)to_pr_V_din");
    sc_trace(mVcdFile, to_pr_V_full_n, "(port)to_pr_V_full_n");
    sc_trace(mVcdFile, to_pr_V_write, "(port)to_pr_V_write");
    sc_trace(mVcdFile, src_mac_addr_V, "(port)src_mac_addr_V");
    sc_trace(mVcdFile, debug_bit_V, "(port)debug_bit_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, state_V_load_load_fu_252_p1, "state_V_load_load_fu_252_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_130_p3, "grp_nbreadreq_fu_130_p3");
    sc_trace(mVcdFile, ap_predicate_op13_read_state1, "ap_predicate_op13_read_state1");
    sc_trace(mVcdFile, ap_predicate_op29_read_state1, "ap_predicate_op29_read_state1");
    sc_trace(mVcdFile, ap_predicate_op44_read_state1, "ap_predicate_op44_read_state1");
    sc_trace(mVcdFile, ap_predicate_op61_read_state1, "ap_predicate_op61_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, state_V_load_reg_550, "state_V_load_reg_550");
    sc_trace(mVcdFile, tmp_3_reg_566, "tmp_3_reg_566");
    sc_trace(mVcdFile, ap_predicate_op89_write_state2, "ap_predicate_op89_write_state2");
    sc_trace(mVcdFile, tmp_2_reg_570, "tmp_2_reg_570");
    sc_trace(mVcdFile, ap_predicate_op94_write_state2, "ap_predicate_op94_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, state_V, "state_V");
    sc_trace(mVcdFile, first_packet_org_dat, "first_packet_org_dat");
    sc_trace(mVcdFile, first_packet_org_las, "first_packet_org_las");
    sc_trace(mVcdFile, first_packet_org_tke, "first_packet_org_tke");
    sc_trace(mVcdFile, first_packet_in_data, "first_packet_in_data");
    sc_trace(mVcdFile, second_packet_org_da, "second_packet_org_da");
    sc_trace(mVcdFile, second_packet_org_la, "second_packet_org_la");
    sc_trace(mVcdFile, second_packet_org_tk, "second_packet_org_tk");
    sc_trace(mVcdFile, app_packet_out_last_s, "app_packet_out_last_s");
    sc_trace(mVcdFile, from_eth_V_blk_n, "from_eth_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, to_shell_V_blk_n, "to_shell_V_blk_n");
    sc_trace(mVcdFile, to_pr_V_blk_n, "to_pr_V_blk_n");
    sc_trace(mVcdFile, reg_242, "reg_242");
    sc_trace(mVcdFile, reg_248, "reg_248");
    sc_trace(mVcdFile, tmp_last_V_reg_554, "tmp_last_V_reg_554");
    sc_trace(mVcdFile, tmp_last_V_1_reg_560, "tmp_last_V_1_reg_560");
    sc_trace(mVcdFile, tmp_1_reg_574, "tmp_1_reg_574");
    sc_trace(mVcdFile, lhs_V_1_fu_328_p1, "lhs_V_1_fu_328_p1");
    sc_trace(mVcdFile, lhs_V_1_reg_578, "lhs_V_1_reg_578");
    sc_trace(mVcdFile, tmp_reg_583, "tmp_reg_583");
    sc_trace(mVcdFile, lhs_V_fu_386_p1, "lhs_V_fu_386_p1");
    sc_trace(mVcdFile, lhs_V_reg_587, "lhs_V_reg_587");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4, "ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158, "ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158");
    sc_trace(mVcdFile, ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4, "ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167, "ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_7_fu_488_p4, "tmp_7_fu_488_p4");
    sc_trace(mVcdFile, tmp_6_fu_498_p4, "tmp_6_fu_498_p4");
    sc_trace(mVcdFile, tmp_37_fu_508_p4, "tmp_37_fu_508_p4");
    sc_trace(mVcdFile, tmp_21_fu_518_p4, "tmp_21_fu_518_p4");
    sc_trace(mVcdFile, storemerge_cast_cast_fu_276_p3, "storemerge_cast_cast_fu_276_p3");
    sc_trace(mVcdFile, storemerge1_cast_cas_fu_302_p3, "storemerge1_cast_cas_fu_302_p3");
    sc_trace(mVcdFile, storemerge3_cast_cas_fu_372_p3, "storemerge3_cast_cas_fu_372_p3");
    sc_trace(mVcdFile, x_V_fu_440_p9, "x_V_fu_440_p9");
    sc_trace(mVcdFile, tmp_20_fu_342_p1, "tmp_20_fu_342_p1");
    sc_trace(mVcdFile, tmp_17_fu_338_p1, "tmp_17_fu_338_p1");
    sc_trace(mVcdFile, grp_fu_212_p4, "grp_fu_212_p4");
    sc_trace(mVcdFile, grp_fu_222_p4, "grp_fu_222_p4");
    sc_trace(mVcdFile, grp_fu_232_p4, "grp_fu_232_p4");
    sc_trace(mVcdFile, observedAddress_V_fu_346_p6, "observedAddress_V_fu_346_p6");
    sc_trace(mVcdFile, tmp_s_fu_360_p2, "tmp_s_fu_360_p2");
    sc_trace(mVcdFile, tmp_22_fu_366_p2, "tmp_22_fu_366_p2");
    sc_trace(mVcdFile, tmp_8_fu_396_p1, "tmp_8_fu_396_p1");
    sc_trace(mVcdFile, tmp_11_fu_410_p4, "tmp_11_fu_410_p4");
    sc_trace(mVcdFile, tmp_14_fu_430_p4, "tmp_14_fu_430_p4");
    sc_trace(mVcdFile, tmp_12_fu_420_p4, "tmp_12_fu_420_p4");
    sc_trace(mVcdFile, tmp_4_fu_400_p4, "tmp_4_fu_400_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_451, "ap_condition_451");
    sc_trace(mVcdFile, ap_condition_455, "ap_condition_455");
    sc_trace(mVcdFile, ap_condition_125, "ap_condition_125");
    sc_trace(mVcdFile, ap_condition_234, "ap_condition_234");
#endif

    }
}

packet_filtering::~packet_filtering() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void packet_filtering::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_5)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_2)))) {
        app_packet_out_last_s = first_packet_org_las.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_6)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_3)))) {
        app_packet_out_last_s = second_packet_org_la.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        app_packet_out_last_s = from_eth_V_dout.read().range(64, 64);
    }
    if (esl_seteq<1,1,1>(ap_condition_125.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) {
            state_V = ap_const_lv4_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read())) {
            state_V = storemerge3_cast_cas_fu_372_p3.read();
        } else if (esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_2)) {
            state_V = ap_const_lv4_3;
        } else if (esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_3)) {
            state_V = ap_const_lv4_4;
        } else if (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4)) {
            state_V = storemerge1_cast_cas_fu_302_p3.read();
        } else if (esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_5)) {
            state_V = ap_const_lv4_6;
        } else if (esl_seteq<1,4,4>(state_V_load_load_fu_252_p1.read(), ap_const_lv4_6)) {
            state_V = ap_const_lv4_7;
        } else if (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7)) {
            state_V = storemerge_cast_cast_fu_276_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        first_packet_in_data = x_V_fu_440_p9.read();
        first_packet_org_las = from_eth_V_dout.read().range(64, 64);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_550.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_583.read()))) {
        first_packet_org_dat = lhs_V_reg_587.read();
        first_packet_org_tke = reg_248.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lhs_V_1_reg_578 = lhs_V_1_fu_328_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        lhs_V_reg_587 = lhs_V_fu_386_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_242 = from_eth_V_dout.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_248 = from_eth_V_dout.read().range(72, 65);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,4,4>(ap_const_lv4_1, state_V_load_reg_550.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_574.read()))) {
        second_packet_org_da = lhs_V_1_reg_578.read();
        second_packet_org_tk = reg_248.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        second_packet_org_la = from_eth_V_dout.read().range(64, 64);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        state_V_load_reg_550 = state_V.read();
        tmp_last_V_1_reg_560 = second_packet_org_la.read();
        tmp_last_V_reg_554 = first_packet_org_las.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_574 =  (sc_lv<1>) (from_eth_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_2_reg_570 =  (sc_lv<1>) (from_eth_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_3_reg_566 =  (sc_lv<1>) (from_eth_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_583 =  (sc_lv<1>) (from_eth_V_empty_n.read());
    }
}

void packet_filtering::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void packet_filtering::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void packet_filtering::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_6)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_2))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void packet_filtering::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_6)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_2))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void packet_filtering::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_6)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_2))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void packet_filtering::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, from_eth_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void packet_filtering::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
  esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_6)) || (esl_seteq<1,1,1>(ap_const_logic_0, to_shell_V_full_n.read()) && 
  esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_5)) || (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
  esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, to_pr_V_full_n.read()) && 
  esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_2)));
}

void packet_filtering::thread_ap_condition_125() {
    ap_condition_125 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void packet_filtering::thread_ap_condition_234() {
    ap_condition_234 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void packet_filtering::thread_ap_condition_451() {
    ap_condition_451 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void packet_filtering::thread_ap_condition_455() {
    ap_condition_455 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void packet_filtering::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void packet_filtering::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void packet_filtering::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void packet_filtering::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void packet_filtering::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void packet_filtering::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void packet_filtering::thread_ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4() {
    if (esl_seteq<1,1,1>(ap_condition_451.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0)) {
            ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4 = app_packet_out_last_s.read();
        } else if (esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_1)) {
            ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4 = from_eth_V_dout.read().range(64, 64);
        } else {
            ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4 = ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167.read();
        }
    } else {
        ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4 = ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167.read();
    }
}

void packet_filtering::thread_ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4() {
    if (esl_seteq<1,1,1>(ap_condition_455.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_0)) {
            ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4 = app_packet_out_last_s.read();
        } else if (esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_1)) {
            ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4 = from_eth_V_dout.read().range(64, 64);
        } else {
            ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4 = ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158.read();
        }
    } else {
        ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4 = ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158.read();
    }
}

void packet_filtering::thread_ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167() {
    ap_phi_reg_pp0_iter0_app_packet_out_last_2_reg_167 =  (sc_lv<1>) ("X");
}

void packet_filtering::thread_ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158() {
    ap_phi_reg_pp0_iter0_app_packet_out_last_3_reg_158 =  (sc_lv<1>) ("X");
}

void packet_filtering::thread_ap_predicate_op13_read_state1() {
    ap_predicate_op13_read_state1 = (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_1));
}

void packet_filtering::thread_ap_predicate_op29_read_state1() {
    ap_predicate_op29_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_1) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4));
}

void packet_filtering::thread_ap_predicate_op44_read_state1() {
    ap_predicate_op44_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_1) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_1));
}

void packet_filtering::thread_ap_predicate_op61_read_state1() {
    ap_predicate_op61_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_130_p3.read(), ap_const_lv1_1) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_0));
}

void packet_filtering::thread_ap_predicate_op89_write_state2() {
    ap_predicate_op89_write_state2 = (esl_seteq<1,4,4>(ap_const_lv4_7, state_V_load_reg_550.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_566.read()));
}

void packet_filtering::thread_ap_predicate_op94_write_state2() {
    ap_predicate_op94_write_state2 = (esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_550.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_570.read()));
}

void packet_filtering::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void packet_filtering::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void packet_filtering::thread_from_eth_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        from_eth_V_blk_n = from_eth_V_empty_n.read();
    } else {
        from_eth_V_blk_n = ap_const_logic_1;
    }
}

void packet_filtering::thread_from_eth_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op29_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        from_eth_V_read = ap_const_logic_1;
    } else {
        from_eth_V_read = ap_const_logic_0;
    }
}

void packet_filtering::thread_grp_fu_212_p4() {
    grp_fu_212_p4 = from_eth_V_dout.read().range(15, 8);
}

void packet_filtering::thread_grp_fu_222_p4() {
    grp_fu_222_p4 = from_eth_V_dout.read().range(23, 16);
}

void packet_filtering::thread_grp_fu_232_p4() {
    grp_fu_232_p4 = from_eth_V_dout.read().range(31, 24);
}

void packet_filtering::thread_grp_nbreadreq_fu_130_p3() {
    grp_nbreadreq_fu_130_p3 =  (sc_lv<1>) (from_eth_V_empty_n.read());
}

void packet_filtering::thread_lhs_V_1_fu_328_p1() {
    lhs_V_1_fu_328_p1 = from_eth_V_dout.read().range(64-1, 0);
}

void packet_filtering::thread_lhs_V_fu_386_p1() {
    lhs_V_fu_386_p1 = from_eth_V_dout.read().range(64-1, 0);
}

void packet_filtering::thread_observedAddress_V_fu_346_p6() {
    observedAddress_V_fu_346_p6 = esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(tmp_20_fu_342_p1.read(), tmp_17_fu_338_p1.read()), grp_fu_212_p4.read()), grp_fu_222_p4.read()), grp_fu_232_p4.read());
}

void packet_filtering::thread_state_V_load_load_fu_252_p1() {
    state_V_load_load_fu_252_p1 = state_V.read();
}

void packet_filtering::thread_storemerge1_cast_cas_fu_302_p3() {
    storemerge1_cast_cas_fu_302_p3 = (!ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4.read()[0].is_01())? sc_lv<4>(): ((ap_phi_mux_app_packet_out_last_2_phi_fu_170_p4.read()[0].to_bool())? ap_const_lv4_0: ap_const_lv4_4);
}

void packet_filtering::thread_storemerge3_cast_cas_fu_372_p3() {
    storemerge3_cast_cas_fu_372_p3 = (!tmp_22_fu_366_p2.read()[0].is_01())? sc_lv<4>(): ((tmp_22_fu_366_p2.read()[0].to_bool())? ap_const_lv4_5: ap_const_lv4_2);
}

void packet_filtering::thread_storemerge_cast_cast_fu_276_p3() {
    storemerge_cast_cast_fu_276_p3 = (!ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4.read()[0].is_01())? sc_lv<4>(): ((ap_phi_mux_app_packet_out_last_3_phi_fu_161_p4.read()[0].to_bool())? ap_const_lv4_0: ap_const_lv4_7);
}

void packet_filtering::thread_tmp_11_fu_410_p4() {
    tmp_11_fu_410_p4 = from_eth_V_dout.read().range(39, 32);
}

void packet_filtering::thread_tmp_12_fu_420_p4() {
    tmp_12_fu_420_p4 = from_eth_V_dout.read().range(55, 48);
}

void packet_filtering::thread_tmp_14_fu_430_p4() {
    tmp_14_fu_430_p4 = from_eth_V_dout.read().range(47, 40);
}

void packet_filtering::thread_tmp_17_fu_338_p1() {
    tmp_17_fu_338_p1 = from_eth_V_dout.read().range(8-1, 0);
}

void packet_filtering::thread_tmp_20_fu_342_p1() {
    tmp_20_fu_342_p1 = first_packet_in_data.read().range(16-1, 0);
}

void packet_filtering::thread_tmp_21_fu_518_p4() {
    tmp_21_fu_518_p4 = esl_concat<9,64>(esl_concat<8,1>(first_packet_org_tke.read(), tmp_last_V_reg_554.read()), first_packet_org_dat.read());
}

void packet_filtering::thread_tmp_22_fu_366_p2() {
    tmp_22_fu_366_p2 = (tmp_s_fu_360_p2.read() | debug_bit_V.read());
}

void packet_filtering::thread_tmp_37_fu_508_p4() {
    tmp_37_fu_508_p4 = esl_concat<9,64>(esl_concat<8,1>(second_packet_org_tk.read(), tmp_last_V_1_reg_560.read()), second_packet_org_da.read());
}

void packet_filtering::thread_tmp_4_fu_400_p4() {
    tmp_4_fu_400_p4 = from_eth_V_dout.read().range(63, 56);
}

void packet_filtering::thread_tmp_6_fu_498_p4() {
    tmp_6_fu_498_p4 = esl_concat<9,64>(esl_concat<8,1>(first_packet_org_tke.read(), tmp_last_V_reg_554.read()), first_packet_org_dat.read());
}

void packet_filtering::thread_tmp_7_fu_488_p4() {
    tmp_7_fu_488_p4 = esl_concat<9,64>(esl_concat<8,1>(second_packet_org_tk.read(), tmp_last_V_1_reg_560.read()), second_packet_org_da.read());
}

void packet_filtering::thread_tmp_8_fu_396_p1() {
    tmp_8_fu_396_p1 = from_eth_V_dout.read().range(8-1, 0);
}

void packet_filtering::thread_tmp_s_fu_360_p2() {
    tmp_s_fu_360_p2 = (!observedAddress_V_fu_346_p6.read().is_01() || !src_mac_addr_V.read().is_01())? sc_lv<1>(): sc_lv<1>(observedAddress_V_fu_346_p6.read() == src_mac_addr_V.read());
}

void packet_filtering::thread_to_pr_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        to_pr_V_blk_n = to_pr_V_full_n.read();
    } else {
        to_pr_V_blk_n = ap_const_logic_1;
    }
}

void packet_filtering::thread_to_pr_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_234.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_2)) {
            to_pr_V_din = tmp_21_fu_518_p4.read();
        } else if (esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_3)) {
            to_pr_V_din = tmp_37_fu_508_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state2.read())) {
            to_pr_V_din = reg_242.read();
        } else {
            to_pr_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        to_pr_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void packet_filtering::thread_to_pr_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        to_pr_V_write = ap_const_logic_1;
    } else {
        to_pr_V_write = ap_const_logic_0;
    }
}

void packet_filtering::thread_to_shell_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_5) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_6) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        to_shell_V_blk_n = to_shell_V_full_n.read();
    } else {
        to_shell_V_blk_n = ap_const_logic_1;
    }
}

void packet_filtering::thread_to_shell_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_234.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_5)) {
            to_shell_V_din = tmp_6_fu_498_p4.read();
        } else if (esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_6)) {
            to_shell_V_din = tmp_7_fu_488_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_write_state2.read())) {
            to_shell_V_din = reg_242.read();
        } else {
            to_shell_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        to_shell_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void packet_filtering::thread_to_shell_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_6) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,4,4>(state_V_load_reg_550.read(), ap_const_lv4_5) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        to_shell_V_write = ap_const_logic_1;
    } else {
        to_shell_V_write = ap_const_logic_0;
    }
}

void packet_filtering::thread_x_V_fu_440_p9() {
    x_V_fu_440_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(tmp_8_fu_396_p1.read(), grp_fu_212_p4.read()), grp_fu_222_p4.read()), grp_fu_232_p4.read()), tmp_11_fu_410_p4.read()), tmp_14_fu_430_p4.read()), tmp_12_fu_420_p4.read()), tmp_4_fu_400_p4.read());
}

void packet_filtering::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

