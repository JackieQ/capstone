// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mac_addr_filter_v4,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.940000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=435,HLS_SYN_LUT=227,HLS_VERSION=2018_2}" *)

module mac_addr_filter_v4 (
        to_shell_V_din,
        to_shell_V_full_n,
        to_shell_V_write,
        to_pr_V_din,
        to_pr_V_full_n,
        to_pr_V_write,
        from_eth_V_dout,
        from_eth_V_empty_n,
        from_eth_V_read,
        src_mac_addr_V,
        debug_bit_V,
        ap_clk,
        ap_rst
);


output  [72:0] to_shell_V_din;
input   to_shell_V_full_n;
output   to_shell_V_write;
output  [72:0] to_pr_V_din;
input   to_pr_V_full_n;
output   to_pr_V_write;
input  [72:0] from_eth_V_dout;
input   from_eth_V_empty_n;
output   from_eth_V_read;
input  [47:0] src_mac_addr_V;
input  [0:0] debug_bit_V;
input   ap_clk;
input   ap_rst;

wire    packet_filtering_U0_ap_start;
wire    packet_filtering_U0_ap_done;
wire    packet_filtering_U0_ap_continue;
wire    packet_filtering_U0_ap_idle;
wire    packet_filtering_U0_ap_ready;
wire    packet_filtering_U0_from_eth_V_read;
wire   [72:0] packet_filtering_U0_to_shell_V_din;
wire    packet_filtering_U0_to_shell_V_write;
wire   [72:0] packet_filtering_U0_to_pr_V_din;
wire    packet_filtering_U0_to_pr_V_write;
wire    ap_sync_continue;
wire    packet_filtering_U0_start_full_n;
wire    packet_filtering_U0_start_write;

packet_filtering packet_filtering_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(packet_filtering_U0_ap_start),
    .ap_done(packet_filtering_U0_ap_done),
    .ap_continue(packet_filtering_U0_ap_continue),
    .ap_idle(packet_filtering_U0_ap_idle),
    .ap_ready(packet_filtering_U0_ap_ready),
    .from_eth_V_dout(from_eth_V_dout),
    .from_eth_V_empty_n(from_eth_V_empty_n),
    .from_eth_V_read(packet_filtering_U0_from_eth_V_read),
    .to_shell_V_din(packet_filtering_U0_to_shell_V_din),
    .to_shell_V_full_n(to_shell_V_full_n),
    .to_shell_V_write(packet_filtering_U0_to_shell_V_write),
    .to_pr_V_din(packet_filtering_U0_to_pr_V_din),
    .to_pr_V_full_n(to_pr_V_full_n),
    .to_pr_V_write(packet_filtering_U0_to_pr_V_write),
    .src_mac_addr_V(src_mac_addr_V),
    .debug_bit_V(debug_bit_V)
);

assign ap_sync_continue = 1'b0;

assign from_eth_V_read = packet_filtering_U0_from_eth_V_read;

assign packet_filtering_U0_ap_continue = 1'b1;

assign packet_filtering_U0_ap_start = 1'b1;

assign packet_filtering_U0_start_full_n = 1'b1;

assign packet_filtering_U0_start_write = 1'b0;

assign to_pr_V_din = packet_filtering_U0_to_pr_V_din;

assign to_pr_V_write = packet_filtering_U0_to_pr_V_write;

assign to_shell_V_din = packet_filtering_U0_to_shell_V_din;

assign to_shell_V_write = packet_filtering_U0_to_shell_V_write;

endmodule //mac_addr_filter_v4
