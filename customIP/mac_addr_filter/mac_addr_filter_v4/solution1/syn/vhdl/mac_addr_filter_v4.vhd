-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_addr_filter_v4 is
port (
    to_shell_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    to_shell_V_full_n : IN STD_LOGIC;
    to_shell_V_write : OUT STD_LOGIC;
    to_pr_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    to_pr_V_full_n : IN STD_LOGIC;
    to_pr_V_write : OUT STD_LOGIC;
    from_eth_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    from_eth_V_empty_n : IN STD_LOGIC;
    from_eth_V_read : OUT STD_LOGIC;
    src_mac_addr_V : IN STD_LOGIC_VECTOR (47 downto 0);
    debug_bit_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC );
end;


architecture behav of mac_addr_filter_v4 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mac_addr_filter_v4,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.940000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=435,HLS_SYN_LUT=227,HLS_VERSION=2018_2}";
    constant ap_const_lv73_0 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal packet_filtering_U0_ap_start : STD_LOGIC;
    signal packet_filtering_U0_ap_done : STD_LOGIC;
    signal packet_filtering_U0_ap_continue : STD_LOGIC;
    signal packet_filtering_U0_ap_idle : STD_LOGIC;
    signal packet_filtering_U0_ap_ready : STD_LOGIC;
    signal packet_filtering_U0_from_eth_V_read : STD_LOGIC;
    signal packet_filtering_U0_to_shell_V_din : STD_LOGIC_VECTOR (72 downto 0);
    signal packet_filtering_U0_to_shell_V_write : STD_LOGIC;
    signal packet_filtering_U0_to_pr_V_din : STD_LOGIC_VECTOR (72 downto 0);
    signal packet_filtering_U0_to_pr_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal packet_filtering_U0_start_full_n : STD_LOGIC;
    signal packet_filtering_U0_start_write : STD_LOGIC;

    component packet_filtering IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        from_eth_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
        from_eth_V_empty_n : IN STD_LOGIC;
        from_eth_V_read : OUT STD_LOGIC;
        to_shell_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
        to_shell_V_full_n : IN STD_LOGIC;
        to_shell_V_write : OUT STD_LOGIC;
        to_pr_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
        to_pr_V_full_n : IN STD_LOGIC;
        to_pr_V_write : OUT STD_LOGIC;
        src_mac_addr_V : IN STD_LOGIC_VECTOR (47 downto 0);
        debug_bit_V : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    packet_filtering_U0 : component packet_filtering
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => packet_filtering_U0_ap_start,
        ap_done => packet_filtering_U0_ap_done,
        ap_continue => packet_filtering_U0_ap_continue,
        ap_idle => packet_filtering_U0_ap_idle,
        ap_ready => packet_filtering_U0_ap_ready,
        from_eth_V_dout => from_eth_V_dout,
        from_eth_V_empty_n => from_eth_V_empty_n,
        from_eth_V_read => packet_filtering_U0_from_eth_V_read,
        to_shell_V_din => packet_filtering_U0_to_shell_V_din,
        to_shell_V_full_n => to_shell_V_full_n,
        to_shell_V_write => packet_filtering_U0_to_shell_V_write,
        to_pr_V_din => packet_filtering_U0_to_pr_V_din,
        to_pr_V_full_n => to_pr_V_full_n,
        to_pr_V_write => packet_filtering_U0_to_pr_V_write,
        src_mac_addr_V => src_mac_addr_V,
        debug_bit_V => debug_bit_V);




    ap_sync_continue <= ap_const_logic_0;
    from_eth_V_read <= packet_filtering_U0_from_eth_V_read;
    packet_filtering_U0_ap_continue <= ap_const_logic_1;
    packet_filtering_U0_ap_start <= ap_const_logic_1;
    packet_filtering_U0_start_full_n <= ap_const_logic_1;
    packet_filtering_U0_start_write <= ap_const_logic_0;
    to_pr_V_din <= packet_filtering_U0_to_pr_V_din;
    to_pr_V_write <= packet_filtering_U0_to_pr_V_write;
    to_shell_V_din <= packet_filtering_U0_to_shell_V_din;
    to_shell_V_write <= packet_filtering_U0_to_shell_V_write;
end behav;
